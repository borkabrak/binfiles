#!/usr/bin/env bash
#
#   Prepare a branch so that a Pull Request into trunk, our QA branch, can be
#   made without further git-fu on the command line

function branch-exists() { 
    local branch=$1
    [[ -n $(git rev-parse -q --verify $branch) ]] && return 0 || return 1; 
}

function is-public() { 
    local branch=$1
    [[ " master release trunk " =~ " $branch " ]] && return 0 || return 1; 
}

function usage() {
cat <<END

USAGE: $(basename $0) [<branch>]

    <branch>: Branch to rebase.  It must exist and not be a public branch (like master, release, or trunk).

END
}

## BEGIN MAIN SCRIPT EXECUTION ##

# First:  Are we in a git repo?
if ! git rev-parse --is-inside-work-tree 2>&1 >/dev/null; then
    echo "This must be run from inside a git repository."
    usage
    exit
fi

# Get the branch name to work with:
#
#   * If we have an argument, use that
#
#   * Otherwise, assume the current branch
[[ $# > 0 ]] && branch=$1 || branch=$(git symbolic-ref --short HEAD)

# Is it a good idea to use this branch?
if ! branch-exists $branch || is-public $branch; then
    echo "'$branch' is either public or non-existent."
    usage
    exit
fi

echo "Branch to rebase: '$branch'"
# Determine the branch that our work branch forks from

# Rebase onto trunk

# Push the branch

# Rebase back onto the original branch
